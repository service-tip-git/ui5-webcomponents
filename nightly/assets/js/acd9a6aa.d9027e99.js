"use strict";(self.webpackChunk_ui5_webcomponents_website=self.webpackChunk_ui5_webcomponents_website||[]).push([[465],{34809:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(31085),i=t(71184);const r={},o="Testing",c={id:"docs/development/testing",title:"Testing",description:"Cypress",source:"@site/docs/docs/4-development/10-testing.md",sourceDirName:"docs/4-development",slug:"/docs/development/testing",permalink:"/webcomponents/nightly/docs/development/testing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Internationalization",permalink:"/webcomponents/nightly/docs/development/internationalization"},next:{title:"Deep dive and best practices",permalink:"/webcomponents/nightly/docs/development/deep-dive-and-best-practices"}},a={},l=[{value:"Cypress",id:"cypress",level:2},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Writing Tests",id:"writing-tests",level:3},{value:"Interacting with Components",id:"interacting-with-components",level:3},{value:"Changing Properties and Attributes",id:"changing-properties-and-attributes",level:4},{value:"Performing Actions",id:"performing-actions",level:4},{value:"Testing Events",id:"testing-events",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Mobile Testing",id:"mobile-testing",level:3},{value:"Custom Commands",id:"custom-commands",level:3},{value:"Changing the language",id:"changing-the-language",level:3},{value:"Code coverage",id:"code-coverage",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h2,{id:"cypress",children:"Cypress"}),"\n",(0,s.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the official Cypress documentation for detailed information on ",(0,s.jsx)(n.a,{href:"https://docs.cypress.io/guides/core-concepts/writing-and-organizing-tests#Folder-structure",children:"folder structure"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For each package in your project, include a ",(0,s.jsx)(n.code,{children:"cypress"})," folder at the root level with the following subfolders:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"specs"})}),": Contains all test files."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"support"})}),": Includes additional functionality such as custom commands that can be reused across different components, as well as library-specific commands (e.g., commands for enforcing mobile testing)."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"writing-tests",children:"Writing Tests"}),"\n",(0,s.jsx)(n.p,{children:"To write tests for a specific component, create a file in the respective package's specs folder:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"{packageName}/cypress/specs/MyComponent.cy.tsx\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We utilize component testing for UI5 web components, which involves mounting the component you intend to test. Our custom ",(0,s.jsx)(n.code,{children:"mount"})," function leverages ",(0,s.jsx)(n.code,{children:"preact"})," with ",(0,s.jsx)(n.code,{children:"JSX"})," syntax for rendering components."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Test File:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'describe("MyComponent Rendering", () => {\n  it("MyComponent exists", () => {\n    cy.mount(<MyComponent></MyComponent>);\n\n    cy.get("[my-component]").should("exist");\n  });\n});\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"interacting-with-components",children:"Interacting with Components"}),"\n",(0,s.jsx)(n.h4,{id:"changing-properties-and-attributes",children:"Changing Properties and Attributes"}),"\n",(0,s.jsxs)(n.p,{children:["Use Cypress's ",(0,s.jsx)(n.code,{children:"invoke"})," command to interact with component properties and attributes."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Reading and Setting Properties:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'// Read a property\ncy.get("[ui5-button]")\n  .should("have.prop", "myProp", "expectedValue");\n\n// Set a property\ncy.get("[ui5-button]")\n  .invoke("prop", "myProp", "newValue");\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Reading and Setting Attributes:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'// Read an attribute\ncy.get("[ui5-button]")\n  .should("have.attr", "my-attr", "expectedValue");\n\n// Set an attribute\ncy.get("[ui5-button]")\n  .invoke("attr", "my-attr", "newValue");\n'})}),"\n",(0,s.jsx)(n.h4,{id:"performing-actions",children:"Performing Actions"}),"\n",(0,s.jsxs)(n.p,{children:["Cypress's default events are simulated, meaning events like ",(0,s.jsx)(n.code,{children:"cy.click"})," or ",(0,s.jsx)(n.code,{children:"cy.type"})," are fired from JavaScript and may not always behave like real native events (",(0,s.jsx)(n.code,{children:"event.isTrusted"})," will be ",(0,s.jsx)(n.code,{children:"false"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["To simulate real user interactions, we use the ",(0,s.jsx)(n.a,{href:"https://github.com/dmtrKovalenko/cypress-real-events",children:(0,s.jsx)(n.code,{children:"cypress-real-events"})})," package, which dispatches actual browser events."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Comparison of Commands:"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Cypress Command"}),(0,s.jsx)(n.th,{children:"cypress-real-events Command"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.click"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.realClick"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.type('a')"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.realPress('a')"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.type('text')"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cy.realType('text')"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"https://github.com/dmtrKovalenko/cypress-real-events",children:"cypress-real-events documentation"})," for more information and additional commands."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"testing-events",children:"Testing Events"}),"\n",(0,s.jsxs)(n.p,{children:["With Cypress component testing, we can efficiently verify if events are fired using ",(0,s.jsx)(n.code,{children:"cy.spy"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'cy.mount(<Button></Button>`);\n\ncy.get("[ui5-button]").then(($button) => {\n  cy.spy($button[0], "click").as("clickEvent");\n});\n\ncy.get("[ui5-button]").realClick();\n\ncy.get("@clickEvent").should("have.been.called");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For more details, refer to the ",(0,s.jsxs)(n.a,{href:"https://docs.cypress.io/api/commands/spy",children:["Cypress ",(0,s.jsx)(n.code,{children:"cy.spy"})," documentation"]}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["To customize the configuration for a specific test, pass a configuration object as the second parameter to the ",(0,s.jsx)(n.code,{children:"mount"})," function. This configuration applies to the entire test page."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { getTheme } from "@ui5/webcomponents-base/dist/config/Theme.js";\nimport { resetConfiguration } from "@ui5/webcomponents-base/dist/InitialConfiguration.js";\n\ndescribe("Configuration Example", () => {\n  const config = {\n    theme: "sap_horizon_hcb",\n  };\n\n  before(() => {\n    cy.mount(<MyComponent></MyComponent>, {\n      ui5Configuration: config,\n    });\n\n    cy.wrap({ resetConfiguration })\n      .invoke("resetConfiguration", true);\n\n  });\n\n  it("should apply the new theme", () => {\n    cy.wrap({ getTheme })\n      .invoke("getTheme")\n      .should("be.equal", config.theme)\n  });\n});\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The configuration persists across all subsequent tests until reset. If the configuration is intended for a specific test, ensure you call ",(0,s.jsx)(n.code,{children:"resetConfiguration"})," after the test completes."]}),"\n",(0,s.jsx)(n.li,{children:"You can directly import and use configuration functions from the respective packages."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { setTheme, getTheme } from "@ui5/webcomponents-base/dist/config/Theme.js";\n\ndescribe("Direct Configuration", () => {\n  it("should change the theme", () => {\n    const newTheme = "sap_horizon_hcb";\n\n    cy.wrap({ setTheme })\n      .invoke("setTheme", newTheme)\n\n    cy.wrap({ getTheme })\n      .invoke("getTheme")\n      .should("be.equal", newTheme)\n  });\n});\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"mobile-testing",children:"Mobile Testing"}),"\n",(0,s.jsxs)(n.p,{children:["To simulate mobile testing conditions, use the ",(0,s.jsx)(n.code,{children:"ui5SimulateDevice"})," Cypress command. This command overrides the ",(0,s.jsx)(n.code,{children:"isPhone"})," function from ",(0,s.jsx)(n.code,{children:"Device.ts"})," to mimic mobile behavior without changing the user agent or opening a new browser."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'cy.mount(<Button></Button>);\n\ncy.ui5SimulateDevice("phone"); // Simulates a phone device\n\ncy.get("[ui5-button]").should("have.class", "ui5-button-mobile");\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"custom-commands",children:"Custom Commands"}),"\n",(0,s.jsx)(n.p,{children:"To create custom Cypress commands:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a new file in the ",(0,s.jsx)(n.code,{children:"cypress/support/commands"})," directory specific to your component."]}),"\n",(0,s.jsx)(n.li,{children:"Define your custom commands within this file."}),"\n",(0,s.jsxs)(n.li,{children:["Import these commands into the main ",(0,s.jsx)(n.code,{children:"commands.ts"})," file located in ",(0,s.jsx)(n.code,{children:"cypress/support"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Describe the TypeScript types for your commands within the Cypress namespace to ensure proper typing and IntelliSense support."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Example (",(0,s.jsx)(n.code,{children:"cypress/support/commands/myComponentCommands.ts"}),"):"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'Cypress.Commands.add("clickMyComponent", (selector) => {\n  cy.get(selector).click();\n});\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      clickMyComponent(selector: string): Chainable<Element>;\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Importing in ",(0,s.jsx)(n.code,{children:"commands.ts"}),":"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import "./myComponentCommands";\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage in Tests:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'describe("My Component Tests", () => {\n  it("should click my component", () => {\n    cy.mount(<MyComponent></MyComponent>);\n\n    cy.clickMyComponent("my-component");\n  });\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"changing-the-language",children:"Changing the language"}),"\n",(0,s.jsx)(n.p,{children:"Locale-aware components often need to set the user's language for certain tests."}),"\n",(0,s.jsx)(n.p,{children:"Here is how you can do it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import Calendar from "../../src/Calendar.js";\nimport "../../src/Assets.js"; // Do not forget to import the Assets.js module for the extra languages\nimport { setLanguage, getLanguage } from "@ui5/webcomponents-base/dist/config/Language.js";\n\ndescribe("Test group", () => {\n\tit("Test", () => {\n\t\t// setLanguage("bg"); // Wrong, the promise will not be awaited!\n\n\t\tcy.wrap({ setLanguage })\n\t\t\t.invoke("setLanguage", "bg"); // Correct, the promise will be awaited!\n\n\t\tcy.wrap({ getLanguage })\n\t\t\t.invoke("getLanguage")\n\t\t\t.should("equal", "bg");\n\n\t\tcy.mount(<Calendar />); // This calendar will be in Bulgarian\n\t});\n});\n'})}),"\n",(0,s.jsx)(n.p,{children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You must import the Assets module for the extra languages to work"}),"\n",(0,s.jsxs)(n.li,{children:["You must call ",(0,s.jsx)(n.code,{children:"setLanguage"})," with ",(0,s.jsx)(n.code,{children:"cy.wrap"})," to make sure it will be awaited until the desired language is completely set (CLDR assets are fetched)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-coverage",children:"Code coverage"}),"\n",(0,s.jsx)(n.p,{children:"Cypress tests automatically run with instrumentation switched on. To see the code coverage report, run the following commands:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# build the project\nyarn build\n# run the tests for a pacakge\ncd packages/main\nyarn test:cypress\n# start a static server in the `coverage` folder and inspect the results in the browser\nhttp-server coverage\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(14041);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);